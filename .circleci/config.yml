# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  test:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: gradle test
      - store_test_results:
          path: build/test-results
  build:
    docker:
      - image: circleci/openjdk:11
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run: gradle stage
      - save_cache:
          paths:
            - ~/repo/build/libs
          key: v1-libs-{{ checksum "~/repo/src/main/appengine/app.yaml" }}
  deploy:
    docker:
      # specify the version you desire here
      - image: google/cloud-sdk
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-libs-{{ checksum "~/repo/src/main/appengine/app.yaml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-libs
      - run: |
          pwd
          echo ${GCLOUD_SERVICE_KEY} | base64 --decode | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GCLOUD_PROJECT}
      - deploy: |
          name: Deploying to App Engine
          command: |
            cd /home/circleci/repo/build/libs
            gcloud app deploy

workflows:
  version: 2
  commit:
    jobs:
      - test
      - build:
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
  nightly:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - master
                - develop
    jobs:
      - test